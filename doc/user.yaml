openapi: 3.0.0

servers:
  - url: //example.legend.io/api/v1
    description: Default server
info:
  description: |
    # Introduction
    User management API Spec for the legend, naive now.

    # Vocabulary List

    This list is used to ensure the strong consistency of the fields in API, and try not to make developers fall into chaos.

    Note that some fields **have the same name with different type**.

    *&XXX means the file path of XXX*

    | EN                          | Type    | CH                           | EN                   | Type    | CH                       |
    | --------------------------- | ------- | ---------------------------- | -------------------- | ------- | ------------------------ |
    | phone                       | String  | 手机号                       | password             | String  | 密码                     |
    | credentials_type            | String  | 证件类型                     | id-card              | String  | 中国身份证               |
    | credentials_number          | String  | 个人证件号，通常是身份证号码 | email                | String  | 邮箱                     |
    | personal_info               | Object  | 个人信息                     | contact_info         | Object  | 联系方式                 |
    | name                        | String  | 姓名，名称                   | address              | String  | 地址                     |
    | occupational_info           | Object  | 职业信息                     | company              | String  | 企业名称                 |
    | company_fixed_line          | String  | 企业联系电话                 | identity             | String  | 行业身份（法官，会计等） |
    | position                    | String  | 企业职称                     | bank_account         | Object  | 银行账户                 |
    | cases                       | Array   | 案件（复数）                 | role                 | String  | 角色                     |
    | case_info                   | Object  | 案件信息                     | case_real_id         | String  | 受理案号                 |
    | acceptance_time             | String  | 受理时间                     | legal_representative | String  | 企业法定代表人           |
    | first_meeting_point         | String  | 一次会时点                   | second_meeting_point | String  | 二次会时点               |
    | claim_declaration_agreement | Integer | 债权申报协议                 | case_id              | uuid    | 案件的唯一id             |
    | creditor_type               | String  | 债权人类型                   | credit_number        | String  | 法人信用号               |
    | company_trustee             | Object  | 法人开户受托人               | user_agreement       | Integer | 用户协议                 | 
    | credentials_front           | String  | *&证件照正面*                   | credentials_back     | String  | *&证件照背面*               |

  version: "0.1.0"
  title: The Legend
  contact:
    name: User Management API Support
    email: xuylin@sjtu.edu.cn
    url: 'https://github.com/linxuyalun'
  x-logo:
    url: 'http://5b0988e595225.cdn.sohucs.com/images/20181027/083e04d73d074e319853323b645b0041.jpeg'
    altText: The Legned logo
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: practitioners
    description: Operations about practitioner, a practitioner is a person to launch a case and manage it
  - name: creditors
    description: >-
      A creditor id in different cases can be the same.

paths:
  '/practitioners/registeration':
    post:
      tags:
        - practitioners
      summary: 2.1 Create a new practitioner
      description: Create a new user via phone number
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        description: Created user object
        required: true

  '/practitioners/login':
    post:
      tags:
        - practitioners
      summary: 2.1 Practitioner login
      description: ''
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        description: Created user object
        required: true

  '/practitioners/logout':
    get:
      tags:
        - practitioners
      summary: 2.1 Practitioner logout
      description: ''
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/NormalResponse'

  '/practitioners/authentication':
    post:
      tags:
        - practitioners
      summary: 2.2 Practitioner real-name authentication
      description: |
        If a user doesn't pass the real-name authentication,
        user can neither launch a project nor accept a mission
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/NormalResponse'
      requestBody:
        $ref: '#/components/requestBodies/PractitionerRealNameAuthentication'

  '/practitioners/profile':
    get:
      tags:
        - practitioners
      summary: 2.2 View information of a practitioner
      description: Viewing other users' information is unpermitted
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/PractitionersProfileResponse'
    put:
      tags:
        - practitioners
      summary: 2.2 Update information of a practitioner
      description: >-
        Information can be updated is partial,
        some information such as name, credentials and so on can't be modyfied.
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/NormalResponse'
      requestBody:
        $ref: '#/components/requestBodies/UpdatePractitionerInfo'

  '/practitioners/registration-code':
    get:
      tags:
        - practitioners
      deprecated: true
      summary: 2.1 Get practitioner registration code
      description: Get the registration code of the practitioner
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/RegistrationCodeResponse'

  '/creditors/login':
    post:
      tags:
        - creditors
      summary: 5.1 Creditor login.
      description: >-
        Creditor login. Case id, credentials number and password are needed.
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
      requestBody:
        description: creditor login information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditorAccount'

  '/creditors/registration':
    post:
      tags:
        - creditors
      summary: 5.1 Creditor register.
      description: >-
        Creditor register.
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
      requestBody:
        description: creditor login information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditorAccountRegister'

  '/creditors/logout':
    get:
      tags:
        - creditors
      summary: 5.1 Creditor logout
      description: ''
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/NormalResponse'


components:
  schemas:
    Account:
      type: object
      required:
        - phone
        - password
      properties:
        phone:
          description: must be your personal number
          type: string
          example: "18686862323"
        password:
          type: string
          description: >-
            User password, MUST contain a mix of upper and lower case letters,
            as well as digits
          format: password
          minLength: 8
          maxLength: 64
          pattern: '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])'
          example: drowssaP123

    CreditorAccount:
      type: object
      properties:
        case_id:
          description: the only id of the case
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        credentials:
          description: creditor username, can be id-card number or credit number
          type: string
          example: "533527198909210238"
        password:
          type: string
          description: Creditor password.
          format: password
          example: drowssaP123

    CompanyCreditor:
      description: The creditor type is company
      allOf:
        - $ref: '#/components/schemas/CreditorAccountRegister'
        - type: object
          properties:
            name:
              description: Company name.
              example: alibaba
            credit_number:
              description: credit number of the company
              type: string
              example: "5335271"
            password:
              type: string
              description: >-
                User password, MUST contain a mix of upper and lower case letters,
                as well as digits
              format: password
              minLength: 8
              maxLength: 64
              pattern: '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])'
              example: drowssaP123
            company_trustee:
              description: a trustee is the person who comes to register the account.
              type: object
              properties:
                name:
                  type: string
                  example: Shinsuke Nakamura
                credentials_number:
                  type: string
                  example: "533527198909210238"
                phone:
                  type: string
                  example: "13422522543"
            user_agreement:
              type: integer
              description: |
                If a creditor wants to register, agree the user agreement is needed.
                '0' means disagree while '1' means agree.
              enum:
                - 1
                - 0

    NaturalPersonCreditor:
      description: The creditor type is natural person
      allOf:
        - $ref: '#/components/schemas/CreditorAccountRegister'
        - type: object
          properties:
            name:
              description: Narural person name.
              example: Mark Henry
            credentials_number:
              description: id card number of the natural person
              type: string
              example: "533527198909210238"
            phone:
              description: natural person phone number
              type: string
              example: "13425683749"
            password:
              type: string
              description: >-
                User password, MUST contain a mix of upper and lower case letters,
                as well as digits
              format: password
              minLength: 8
              maxLength: 64
              pattern: '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])'
              example: drowssaP123
            user_agreement:
              type: integer
              description: |
                If a creditor wants to register, agree the user agreement is needed.
                '0' means disagree while '1' means agree.
              enum:
                - 1
                - 0

    CreditorAccountRegister:
      type: object
      discriminator:
        propertyName: creditor_type
        mapping:
          company: '#/components/schemas/CompanyCreditor'
          natural-person: '#/components/schemas/NaturalPersonCreditor'
      properties:
        claim_declaration_agreement:
          description: >-
            If a Creditor wants to register, he/she must agree the claim declaration agreement
            0 represents disagree, 1 represents agree
          type: integer
          enum:
            - 0
            - 1
        case_id:
          description: the only id of the case
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        creditor_type:
          type: string
          enum:
            - company
            - natural-person

    Login:
      type: object
      properties:
        status_code:
          description: invalid operation
          type: integer
          enum:
            - 200
        message:
          type: string
          example: Login successfully!
        body:
          type: object
          properties:
            token:
              type: string
              example: Header.Payload.Signature

    Error:
      type: object
      properties:
        status_code:
          description: invalid operation
          type: integer
          enum:
            - 401
            - 403
            - 409
        message:
          type: string
          example: Invalid operation!

    MessageOnly:
      type: object
      properties:
        status_code:
          description: successful operation
          type: integer
          enum:
            - 200
        message:
          type: string
          example: Valid operation!

    PractitionerPersonalInfo:
      type: object
      properties:
        name:
          type: string
          description: user real name
          example: Randy Orton
        credentials_type:
          type: string
          description: credentials type
          enum:
            - id-card
            - others
        credentials_number:
          type: string
          description: credentials' number
          example: "533527198909210238"

    PractitionerContact:
      type: object
      properties:
        address:
          type: string
          description: user contact address
          example: Shanghai Jiaotong University
        email:
          type: string
          format: email
          description: the email address to contact

    PractitionerOccupationalInfo:
      type: object
      properties:
        company:
          type: string
          description: the company user works for
          example: alibaba
        legal_representative:
          type: string
          description: the legal representative name for the company
          example: john cena
        company_fixed_line:
          type: string
          description: the fixed line of the company
        identity:
          type: string
          description: the identity of the industry user works in
          enum:
            - judge
            - lawyer
            - accountant
            - liquidator
            - financial-consultant
            - business-management
            - others
        position:
          type: string
          description: the position user in
          example: project manager

    CaseInfo:
      description: basic information of the case
      type: object
      properties:
        case_real_id:
          type: string
          description: the real-world id of the case
          example: "(2011) the second court No. 92"
        acceptance_time:
          type: string
          description: Acceptance Time Of The Court (Arbitral Authority)
          example: 2018-08-24
        first_meeting_point:
          type: string
          example: 2019-01-01
        second_meeting_point:
          type: string
          example: 2019-02-02
        todo:
          type: string
          example: todo

    CaseBasicInfo:
      type: object
      properties:
        case_info:
          $ref: '#/components/schemas/CaseInfo'
        role:
          type: string
          description: the roll of the case the practitioner in
          enum:
            - visitor
            - manager
            - todo

    200PractitionersProfile:
      type: object
      properties:
        status_code:
          description: successful operation
          type: integer
          enum:
            - 200
        message:
          type: string
          example: Get practitioners profile successfully!
        body:
          type: object
          properties:
            personal_info:
              $ref: '#/components/schemas/PractitionerPersonalInfo'
            contact_info:
              $ref: '#/components/schemas/PractitionerContact'
            occupational_info:
              $ref: '#/components/schemas/PractitionerOccupationalInfo'
            cases:
              description: the cases the practitioner involves
              type: array
              items:
                $ref: '#/components/schemas/CaseBasicInfo'

    200RegistrationCode:
      type: object
      properties:
        status_code:
          description: successful operation
          type: integer
          enum:
            - 200
        message:
          type: string
          example: Get practitioner registration code successfully!
        body:
          type: object
          properties:
            registration_code:
              type: string
              description: the registration code of the practitioner
              example: todo

  requestBodies:
    PractitionerRealNameAuthentication:
      description: Created practitioner object
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              files:
                type: object
                properties:
                  credentials_front:
                    type: string
                    description: the image partial path of the face of credentials
                    example: GUQMDUAOQ8NKQQ
                  credentials_back:
                    type: string
                    description: the image partial path of the rear of credentials
                    example: WOQKEHXUWIGFDMH
              personal_info:
                $ref: '#/components/schemas/PractitionerPersonalInfo'
              contact_info:
                $ref: '#/components/schemas/PractitionerContact'
              occupational_info:
                $ref: '#/components/schemas/PractitionerOccupationalInfo'
              bank_account:
                type: object
                properties:
                  todo:
                    type: string
                    example: todo

    UpdatePractitionerInfo:
      description: Update practitioner object
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              contact_info:
                $ref: '#/components/schemas/PractitionerContact'
              occupational_info:
                $ref: '#/components/schemas/PractitionerOccupationalInfo'

  responses:
    TokenResponse:
      description: normal response obejct
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Login'
              - $ref: '#/components/schemas/Error'

    NormalResponse:
      description: normal response obejct
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/MessageOnly'
              - $ref: '#/components/schemas/Error'

    PractitionersProfileResponse:
      description: the basic information of the practitioners
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/200PractitionersProfile'
              - $ref: '#/components/schemas/Error'

    RegistrationCodeResponse:
      description: the registration code of the practitioner
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/200RegistrationCode'
              - $ref: '#/components/schemas/Error'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT